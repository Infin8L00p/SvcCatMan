AWSTemplateFormatVersion: "2010-09-09"
Description: |
  CloudFormation template for bootstrapping Service Catalog Manager, including
  Terraform state resources, CodePipeline, CodeBuild, and integration with
  GitHub.

Parameters:
  ArtifactStorageBucketName:
    Type: String
    Description: Name of the S3 bucket for storing repo artifacts.
    Default: "artifact-storage"

  BuildSpecStorageBucketName:
    Type: String
    Description: Name of the S3 bucket for storing CodeBuild buildspec files.
    Default: "buildspec-storage"

  StateBucketName:
    Type: String
    Description: Name of the S3 bucket for storing Terraform state.
    Default: "terraform-state"

  StateLockTableName:
    Type: String
    Description: Name of the DynamoDB table for Terraform state locking.
    Default: "state-lock-table"

  GitHubSecretARN:
    Type: String
    Description: |
      ARN of the manually managed GitHub token secret in AWS Secrets Manager.

  CodeConnectionARN:
    Type: String
    Description: |
      ARN of the manually managed Codeconnection.

  EnableJSM:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: |
      Set to "true" to enable JSM-related resources (SMSyncUser and SMEndUser),
      otherwise "false".

  LowerCaseStackName:
    Type: String
    Default: "svccatman"

Conditions:
  EnableJSMCondition: !Equals
    - !Ref EnableJSM
    - true

Resources:
################################################################################
## Terraform Resources
################################################################################

  StateStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${LowerCaseStackName}-${StateBucketName}
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            ExpirationInDays: 365
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  StateStorageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StateStorageBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt CodeBuildRole.Arn
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
            Resource:
              - !Sub "${StateStorageBucket.Arn}"
              - !Sub "${StateStorageBucket.Arn}/*"

  StateLockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-${StateLockTableName}
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true

################################################################################
## Service Catalog Pipeline
################################################################################

  ArtifactStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${LowerCaseStackName}-${ArtifactStorageBucketName}
      VersioningConfiguration:
        Status: Enabled

  BuildSpecStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${LowerCaseStackName}-${BuildSpecStorageBucketName}
      VersioningConfiguration:
        Status: Enabled

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}CodePipelinePermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - s3:*
                  - dynamodb:*
                Resource:
                  - "*"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}CodeBuildPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:*
                Resource:
                  - !Ref GitHubSecretARN
              - Effect: Allow
                Action:
                  - codestar-connections:*
                Resource:
                  - !Ref CodeConnectionARN
              - Effect: Allow
                Action:
                  - logs:*
                  - s3:*
                  - dynamodb:*
                  - servicecatalog:*
                  - iam:*
                  - cloudformation:*
                  - secretsmanager:*"
                  - codepipeline:*
                  - kms:*
                  - ssm:*
                Resource:
                  - "*"

  DeployCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: Deploy
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: hashicorp/terraform:1.10
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildRole.Arn

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: DeployPipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStorageBucket
      Stages:
        - Name: Source
          Actions:
            - Name: ArtifactSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                S3Bucket: !Ref ArtifactStorageBucket
                S3ObjectKey: "artifact.zip"
            - Name: BuildSpecSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              OutputArtifacts:
                - Name: BuildSpecArtifact
              Configuration:
                S3Bucket: !Ref BuildSpecStorageBucket
                S3ObjectKey: "deploy.zip"
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceArtifact
                - Name: BuildSpecArtifact
              Configuration:
                ProjectName: !Ref DeployCodeBuildProject
                PrimarySource: BuildSpecArtifact

Outputs:
  ArtifactStorageBucketName:
    Description: The name of the S3 bucket for storing artifacts.
    Value: !Ref ArtifactStorageBucket

  BuildSpecStorageBucketName:
    Description: The name of the S3 bucket for storing buildspecs.
    Value: !Ref BuildSpecStorageBucket

  StateBucketName:
    Description: The name of the S3 bucket for storing Terraform state.
    Value: !Ref StateStorageBucket

  StateLockTableName:
    Description: The name of the DynamoDB table for Terraform state locking.
    Value: !Ref StateLockTable

  CodePipelineName:
    Description: The name of the CodePipeline.
    Value: !Ref CodePipeline
