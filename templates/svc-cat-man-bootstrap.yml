AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template for S3 buckets, CodePipeline, and Terraform state management with DynamoDB state locking.

Parameters:
  ArtifactStorageBucketName:
    Type: String
    Description: Name of the S3 bucket for storing repo artifacts.

  BuildSpecStorageBucketName:
    Type: String
    Description: Name of the S3 bucket for storing CodeBuild buildspec files.

  StateBucketName:
    Type: String
    Description: Name of the S3 bucket for storing Terraform state.

  StateLockTableName:
    Type: String
    Description: Name of the DynamoDB table for Terraform state locking.

Resources:
  # S3 Bucket for Artifact Storage
  ArtifactStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${ArtifactStorageBucketName}
      VersioningConfiguration:
        Status: Enabled

  # S3 Bucket for BuildSpec Storage
  BuildSpecStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${BuildSpecStorageBucketName}
      VersioningConfiguration:
        Status: Enabled

  StateStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${StateBucketName}
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            ExpirationInDays: 365
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  StateStorageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StateStorageBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # Allow Terraform to manage state files
          - Effect: Allow
            Principal:
              AWS: !GetAtt CodeBuildRole.Arn
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
            Resource:
              - !Sub "${StateStorageBucket.Arn}"
              - !Sub "${StateStorageBucket.Arn}/*"

  # DynamoDB Table for State Locking
  StateLockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-${StateLockTableName}
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true

  # IAM Role for CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::575108940418:user/admin
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}CodePipelinePermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - s3:*
                  - dynamodb:*
                Resource:
                  - "*"

  # IAM Role for CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}CodeBuildPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                  - s3:*
                  - dynamodb:*
                Resource:
                  - "*"

  # CodeBuild Projects
  DeployDevelopmentCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: deploy-development
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: hashicorp/terraform:1.10
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildRole.Arn

  DeployProductionCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: deploy-production
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: hashicorp/terraform:1.10
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildRole.Arn

  # CodePipeline
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: DeployPipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStorageBucket
      Stages:
        - Name: Source
          Actions:
            - Name: ArtifactSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                S3Bucket: !Ref ArtifactStorageBucket
                S3ObjectKey: "artifact.zip"
            - Name: BuildSpecSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              OutputArtifacts:
                - Name: BuildSpecArtifact
              Configuration:
                S3Bucket: !Ref BuildSpecStorageBucket
                S3ObjectKey: "deploy.zip"
        - Name: DeployToDevelopment
          Actions:
            - Name: DeployDevelopment
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceArtifact
                - Name: BuildSpecArtifact
              Configuration:
                ProjectName: !Ref DeployDevelopmentCodeBuildProject
                PrimarySource: BuildSpecArtifact
                EnvironmentVariables: '[{"name":"ENVIRONMENT","value":"development","type":"PLAINTEXT"}]'
        - Name: DeployToProduction
          Actions:
            - Name: DeployProduction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceArtifact
                - Name: BuildSpecArtifact
              Configuration:
                ProjectName: !Ref DeployProductionCodeBuildProject
                PrimarySource: BuildSpecArtifact
                EnvironmentVariables: '[{"name":"ENVIRONMENT","value":"production","type":"PLAINTEXT"}]'

Outputs:
  ArtifactStorageBucketName:
    Description: The name of the S3 bucket for storing artifacts.
    Value: !Ref ArtifactStorageBucket

  BuildSpecStorageBucketName:
    Description: The name of the S3 bucket for storing buildspecs.
    Value: !Ref BuildSpecStorageBucket

  StateBucketName:
    Description: The name of the S3 bucket for storing Terraform state.
    Value: !Ref StateStorageBucket

  StateLockTableName:
    Description: The name of the DynamoDB table for Terraform state locking.
    Value: !Ref StateLockTable

  CodePipelineName:
    Description: The name of the CodePipeline.
    Value: !Ref CodePipeline
